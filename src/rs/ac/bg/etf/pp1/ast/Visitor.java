// generated with ast extension for cup
// version 0.8
// 22/7/2019 15:47:33


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(ClassMethodDecls ClassMethodDecls);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(ExprList ExprList);
    public void visit(Relop Relop);
    public void visit(FormalParamList FormalParamList);
    public void visit(DeclList DeclList);
    public void visit(ForDesStatement ForDesStatement);
    public void visit(ConstInitList ConstInitList);
    public void visit(IfCondition IfCondition);
    public void visit(Expr Expr);
    public void visit(GlVarIdentListPart GlVarIdentListPart);
    public void visit(InitList InitList);
    public void visit(Unmatched Unmatched);
    public void visit(ForCondition ForCondition);
    public void visit(ClassExtends ClassExtends);
    public void visit(SubdesignatorList SubdesignatorList);
    public void visit(ActualParamList ActualParamList);
    public void visit(EnumElemList EnumElemList);
    public void visit(TypeList TypeList);
    public void visit(Constant Constant);
    public void visit(Condition Condition);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(DesignatorAssignment DesignatorAssignment);
    public void visit(EnumElem EnumElem);
    public void visit(GlobalVarError GlobalVarError);
    public void visit(VarIdentList VarIdentList);
    public void visit(CondTerm CondTerm);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(GlobalVarIdentList GlobalVarIdentList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ClassImplements ClassImplements);
    public void visit(VarIdent VarIdent);
    public void visit(TermList TermList);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(PrintParameter PrintParameter);
    public void visit(DesignatorName DesignatorName);
    public void visit(ActPars ActPars);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(Term Term);
    public void visit(Decl Decl);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(RelopLessEq RelopLessEq);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEq RelopGreaterEq);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDivision MulopDivision);
    public void visit(MulopMultiplication MulopMultiplication);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(Assignop Assignop);
    public void visit(Subdesignator Subdesignator);
    public void visit(NoSubdesignators NoSubdesignators);
    public void visit(Subdesignators Subdesignators);
    public void visit(ArrayName ArrayName);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(NonArrayDesignator NonArrayDesignator);
    public void visit(Designator Designator);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(InitElem InitElem);
    public void visit(SingleExprLst SingleExprLst);
    public void visit(ExprLst ExprLst);
    public void visit(InitListStart InitListStart);
    public void visit(InitLst InitLst);
    public void visit(NewArray NewArray);
    public void visit(ParenFact ParenFact);
    public void visit(NewFactArray NewFactArray);
    public void visit(NewFact NewFact);
    public void visit(Const Const);
    public void visit(FuncCall FuncCall);
    public void visit(DesignFact DesignFact);
    public void visit(SingleFactor SingleFactor);
    public void visit(Factors Factors);
    public void visit(BinaryCondFact BinaryCondFact);
    public void visit(UnaryCondFact UnaryCondFact);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(CondTerms CondTerms);
    public void visit(SingleCondition SingleCondition);
    public void visit(Conditions Conditions);
    public void visit(DesignAssignErrBeg DesignAssignErrBeg);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(MethodCalled MethodCalled);
    public void visit(DesignAssign DesignAssign);
    public void visit(DesignDec DesignDec);
    public void visit(DesignInc DesignInc);
    public void visit(DesignCall DesignCall);
    public void visit(DesignAssignErr DesignAssignErr);
    public void visit(NewArrayInit NewArrayInit);
    public void visit(DesignAssignStmt DesignAssignStmt);
    public void visit(SingleTerm SingleTerm);
    public void visit(Terms Terms);
    public void visit(PositiveExpr PositiveExpr);
    public void visit(NegativeExpr NegativeExpr);
    public void visit(NoForCondition NoForCondition);
    public void visit(ForCond ForCond);
    public void visit(IfCondError IfCondError);
    public void visit(IfCond IfCond);
    public void visit(ForDesStmt2 ForDesStmt2);
    public void visit(ForDesStmt1 ForDesStmt1);
    public void visit(NoForDesStmt NoForDesStmt);
    public void visit(ForDesignDec ForDesignDec);
    public void visit(ForDesignInc ForDesignInc);
    public void visit(ForDesignCall ForDesignCall);
    public void visit(ForDesignAssignError ForDesignAssignError);
    public void visit(ForDesignAssign ForDesignAssign);
    public void visit(NoPrintParam NoPrintParam);
    public void visit(PrintParam PrintParam);
    public void visit(StmtBlock StmtBlock);
    public void visit(ReadStmt ReadStmt);
    public void visit(MatchedForStmt MatchedForStmt);
    public void visit(MatchedIfElse MatchedIfElse);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(PrintStmt PrintStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(DesignatorStmtErr DesignatorStmtErr);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(For For);
    public void visit(UnmatchedThen UnmatchedThen);
    public void visit(MatchedThen MatchedThen);
    public void visit(UnmatchedForStmt UnmatchedForStmt);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamError FormalParamError);
    public void visit(FormalParam FormalParam);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(MethodReturnVoid MethodReturnVoid);
    public void visit(MethodReturnTypeT MethodReturnTypeT);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(NoInterfaceMethodDecl NoInterfaceMethodDecl);
    public void visit(InterfaceMethodDeclarations InterfaceMethodDeclarations);
    public void visit(Type Type);
    public void visit(NoClassMethodDecls NoClassMethodDecls);
    public void visit(ClassMethodDeclarations ClassMethodDeclarations);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(SingleType SingleType);
    public void visit(Types Types);
    public void visit(NoClassImplement NoClassImplement);
    public void visit(ClassImplement ClassImplement);
    public void visit(NoClassExtend NoClassExtend);
    public void visit(ClassExtend ClassExtend);
    public void visit(NoInitEnumElem NoInitEnumElem);
    public void visit(InitEnumElem InitEnumElem);
    public void visit(SingleEnumElem SingleEnumElem);
    public void visit(EnumElems EnumElems);
    public void visit(ArrayVarIdent ArrayVarIdent);
    public void visit(NonArrayVarIdent NonArrayVarIdent);
    public void visit(SingleVarIdent SingleVarIdent);
    public void visit(VarIdents VarIdents);
    public void visit(ConstInit ConstInit);
    public void visit(SingleConstInit SingleConstInit);
    public void visit(ConstInits ConstInits);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(InterfaceDeclDerived1 InterfaceDeclDerived1);
    public void visit(EnumName EnumName);
    public void visit(EnumDecl EnumDecl);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarDecl VarDecl);
    public void visit(GlVarIdentErr GlVarIdentErr);
    public void visit(GlVarIdentOk GlVarIdentOk);
    public void visit(SingleGlobalVarIdentList SingleGlobalVarIdentList);
    public void visit(GlobalVarIdents GlobalVarIdents);
    public void visit(GlobalVarErr GlobalVarErr);
    public void visit(GlobalVarDeclaration GlobalVarDeclaration);
    public void visit(FirstGlobalVarErr FirstGlobalVarErr);
    public void visit(GlVarErr GlVarErr);
    public void visit(ConstType ConstType);
    public void visit(ConstDecl ConstDecl);
    public void visit(InterfaceDeclaration InterfaceDeclaration);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(GlobalVar GlobalVar);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
